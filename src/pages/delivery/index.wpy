<template>
<view>
  <view class="container" wx:if="{{curLanguage == 'Chinese'}}">
    <!-- <view class='language'>
      切换语言：
      <view class='selectBlock'>
        <Select id="select"/>
      </view>
    </view> -->
    <view class="TabBar">
      <view class="{{deliveryType == 0 ? 'active' : ''}}" @tap="changeTab(0)">投递记录</view>
      <view class="{{deliveryType == 1 ? 'active' : ''}}" @tap="changeTab(1)">人工回收记录</view>
      <view class="{{deliveryType == 2 ? 'active' : ''}}" @tap="changeTab(2)">预约上门</view>
    </view>
    <view class="PointsTop">
      <view class="Item">
        <text>0</text>
        <text>累计垃圾投递次数</text>
      </view>
    </view>
  </view>
  <view class="container" wx:if="{{curLanguage == 'English'}}">
    <view class="TabBar">
      <view class="{{deliveryType == 0 ? 'active' : ''}}" @tap="changeTab(0)">Delivery</view>
      <view class="{{deliveryType == 1 ? 'active' : ''}}" @tap="changeTab(1)">Manual</view>
      <view class="{{deliveryType == 2 ? 'active' : ''}}" @tap="changeTab(2)">Booking</view>
    </view>
    <view class="PointsTop">
      <view class="Item">
        <text>0</text>
        <text>Cumulative garbage delivery times</text>
      </view>
    </view>
  </view>
</view>
</template>
<script>
import wepy from 'wepy'
import { connect } from 'wepy-redux'
import Select from '@/components/select'
@connect({
  curLanguage (state) {
    return state.changeLanguage.curLanguage.name
  }
}, {})
export default class QrCode extends wepy.page {
  config = {
    navigationBarTitleText: ''
  }
  components = {
    Select: Select
  }
  data  = {
    deliveryType: 0
  }
  onShow () {
    if (this.curLanguage === 'Chinese') {
      wepy.setNavigationBarTitle({
        title:"累计投递"
      })
    } else {
      wepy.setNavigationBarTitle({
        title:"Cumulative delivery"
      })
    }
  }

  methods = {
    changeTab (type) {
      this.deliveryType = type
    }
  }
  getPoints () {
    wepy.request({
      url: this.$parent.globalData.qrurl + '/sercode?userid=' + this.$parent.globalData.openid,
      data: {},
      header: {
        'content-type': 'application/json'
      },
      success: (res) => {
        
      }
    })
  }
}
</script>
<style>
page {
  background-color: #f5f5f5;
}
.language{
  width: 100%;
  height: 70rpx;
  line-height: 70rpx;
  background: #fff;
  display: flex;
  justify-content: flex-end;
  font-size: 30rpx;
}
.selectBlock{
  width: 80px;
  height: 100%;
}
.PointsTop{
  width: 100%;
  height: 250rpx;
  background-image: linear-gradient(to top, #a3bded 0%, #6991c7 100%);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  color: #fff;
}
.PointsTop text{
  display: block;
}
.Item{
  padding: 10rpx 40rpx;
}
.HasLine{
  border-left: 2rpx solid #fff;
}
.TabBar{
  width: 100%;
  height: 100rpx;
  display: flex;
  justify-content: space-around;
  align-items: center;
  background: #fff;
  margin: 0 auto;
  padding-bottom: 20rpx;
}
.TabBar view{
  width: 200rpx;
  height: 95%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.active{
  color: #1296db;
  border-bottom: 2px solid #1296db;
}
</style>